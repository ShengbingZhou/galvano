-- VHDL netlist generated by SCUBA Diamond (64-bit) 3.7.0.96.1
-- Module  Version: 4.9
--C:\lscc\diamond\3.7_x64\ispfpga\bin\nt64\scuba.exe -w -n MultiplierS16 -lang vhdl -synth lse -bus_exp 7 -bb -arch mg5a00 -type dspmult -simple_portname -widtha 16 -widthb 16 -widthp 32 -signed -PL_stages 0 

-- Mon Jan 22 13:19:37 2018

library IEEE;
use IEEE.std_logic_1164.all;
-- synopsys translate_off
library xp2;
use xp2.components.all;
-- synopsys translate_on

entity MultiplierS16 is
    port (
        DataA: in  std_logic_vector(15 downto 0); 
        DataB: in  std_logic_vector(15 downto 0); 
        Result: out  std_logic_vector(31 downto 0));
end MultiplierS16;

architecture Structure of MultiplierS16 is

    -- internal signal declarations
    signal scuba_vhi: std_logic;
    signal scuba_vlo: std_logic;

    -- local component declarations
    component VHI
        port (Z: out  std_logic);
    end component;
    component VLO
        port (Z: out  std_logic);
    end component;
    component MULT18X18B
    -- synopsys translate_off
        generic (GSR : in String; REG_SIGNEDB_RST : in String; 
                REG_SIGNEDB_CE : in String; REG_SIGNEDB_CLK : in String; 
                REG_SIGNEDA_RST : in String; REG_SIGNEDA_CE : in String; 
                REG_SIGNEDA_CLK : in String; REG_OUTPUT_RST : in String; 
                REG_OUTPUT_CE : in String; REG_OUTPUT_CLK : in String; 
                REG_PIPELINE_RST : in String; 
                REG_PIPELINE_CE : in String; 
                REG_PIPELINE_CLK : in String; REG_INPUTB_RST : in String; 
                REG_INPUTB_CE : in String; REG_INPUTB_CLK : in String; 
                REG_INPUTA_RST : in String; REG_INPUTA_CE : in String; 
                REG_INPUTA_CLK : in String);
    -- synopsys translate_on
        port (A17: in  std_logic; A16: in  std_logic; A15: in  std_logic; 
            A14: in  std_logic; A13: in  std_logic; A12: in  std_logic; 
            A11: in  std_logic; A10: in  std_logic; A9: in  std_logic; 
            A8: in  std_logic; A7: in  std_logic; A6: in  std_logic; 
            A5: in  std_logic; A4: in  std_logic; A3: in  std_logic; 
            A2: in  std_logic; A1: in  std_logic; A0: in  std_logic; 
            B17: in  std_logic; B16: in  std_logic; B15: in  std_logic; 
            B14: in  std_logic; B13: in  std_logic; B12: in  std_logic; 
            B11: in  std_logic; B10: in  std_logic; B9: in  std_logic; 
            B8: in  std_logic; B7: in  std_logic; B6: in  std_logic; 
            B5: in  std_logic; B4: in  std_logic; B3: in  std_logic; 
            B2: in  std_logic; B1: in  std_logic; B0: in  std_logic; 
            SIGNEDA: in  std_logic; SIGNEDB: in  std_logic; 
            SOURCEA: in  std_logic; SOURCEB: in  std_logic; 
            CE0: in  std_logic; CE1: in  std_logic; CE2: in  std_logic; 
            CE3: in  std_logic; CLK0: in  std_logic; CLK1: in  std_logic; 
            CLK2: in  std_logic; CLK3: in  std_logic; 
            RST0: in  std_logic; RST1: in  std_logic; 
            RST2: in  std_logic; RST3: in  std_logic; 
            SRIA17: in  std_logic; SRIA16: in  std_logic; 
            SRIA15: in  std_logic; SRIA14: in  std_logic; 
            SRIA13: in  std_logic; SRIA12: in  std_logic; 
            SRIA11: in  std_logic; SRIA10: in  std_logic; 
            SRIA9: in  std_logic; SRIA8: in  std_logic; 
            SRIA7: in  std_logic; SRIA6: in  std_logic; 
            SRIA5: in  std_logic; SRIA4: in  std_logic; 
            SRIA3: in  std_logic; SRIA2: in  std_logic; 
            SRIA1: in  std_logic; SRIA0: in  std_logic; 
            SRIB17: in  std_logic; SRIB16: in  std_logic; 
            SRIB15: in  std_logic; SRIB14: in  std_logic; 
            SRIB13: in  std_logic; SRIB12: in  std_logic; 
            SRIB11: in  std_logic; SRIB10: in  std_logic; 
            SRIB9: in  std_logic; SRIB8: in  std_logic; 
            SRIB7: in  std_logic; SRIB6: in  std_logic; 
            SRIB5: in  std_logic; SRIB4: in  std_logic; 
            SRIB3: in  std_logic; SRIB2: in  std_logic; 
            SRIB1: in  std_logic; SRIB0: in  std_logic; 
            SROA17: out  std_logic; SROA16: out  std_logic; 
            SROA15: out  std_logic; SROA14: out  std_logic; 
            SROA13: out  std_logic; SROA12: out  std_logic; 
            SROA11: out  std_logic; SROA10: out  std_logic; 
            SROA9: out  std_logic; SROA8: out  std_logic; 
            SROA7: out  std_logic; SROA6: out  std_logic; 
            SROA5: out  std_logic; SROA4: out  std_logic; 
            SROA3: out  std_logic; SROA2: out  std_logic; 
            SROA1: out  std_logic; SROA0: out  std_logic; 
            SROB17: out  std_logic; SROB16: out  std_logic; 
            SROB15: out  std_logic; SROB14: out  std_logic; 
            SROB13: out  std_logic; SROB12: out  std_logic; 
            SROB11: out  std_logic; SROB10: out  std_logic; 
            SROB9: out  std_logic; SROB8: out  std_logic; 
            SROB7: out  std_logic; SROB6: out  std_logic; 
            SROB5: out  std_logic; SROB4: out  std_logic; 
            SROB3: out  std_logic; SROB2: out  std_logic; 
            SROB1: out  std_logic; SROB0: out  std_logic; 
            P35: out  std_logic; P34: out  std_logic; 
            P33: out  std_logic; P32: out  std_logic; 
            P31: out  std_logic; P30: out  std_logic; 
            P29: out  std_logic; P28: out  std_logic; 
            P27: out  std_logic; P26: out  std_logic; 
            P25: out  std_logic; P24: out  std_logic; 
            P23: out  std_logic; P22: out  std_logic; 
            P21: out  std_logic; P20: out  std_logic; 
            P19: out  std_logic; P18: out  std_logic; 
            P17: out  std_logic; P16: out  std_logic; 
            P15: out  std_logic; P14: out  std_logic; 
            P13: out  std_logic; P12: out  std_logic; 
            P11: out  std_logic; P10: out  std_logic; P9: out  std_logic; 
            P8: out  std_logic; P7: out  std_logic; P6: out  std_logic; 
            P5: out  std_logic; P4: out  std_logic; P3: out  std_logic; 
            P2: out  std_logic; P1: out  std_logic; P0: out  std_logic);
    end component;
    attribute GSR : string; 
    attribute REG_SIGNEDB_RST : string; 
    attribute REG_SIGNEDB_CE : string; 
    attribute REG_SIGNEDB_CLK : string; 
    attribute REG_SIGNEDA_RST : string; 
    attribute REG_SIGNEDA_CE : string; 
    attribute REG_SIGNEDA_CLK : string; 
    attribute REG_OUTPUT_RST : string; 
    attribute REG_OUTPUT_CE : string; 
    attribute REG_OUTPUT_CLK : string; 
    attribute REG_PIPELINE_RST : string; 
    attribute REG_PIPELINE_CE : string; 
    attribute REG_PIPELINE_CLK : string; 
    attribute REG_INPUTB_RST : string; 
    attribute REG_INPUTB_CE : string; 
    attribute REG_INPUTB_CLK : string; 
    attribute REG_INPUTA_RST : string; 
    attribute REG_INPUTA_CE : string; 
    attribute REG_INPUTA_CLK : string; 
    attribute GSR of dsp_0 : label is "ENABLED";
    attribute REG_SIGNEDB_RST of dsp_0 : label is "RST0";
    attribute REG_SIGNEDB_CE of dsp_0 : label is "CE0";
    attribute REG_SIGNEDB_CLK of dsp_0 : label is "NONE";
    attribute REG_SIGNEDA_RST of dsp_0 : label is "RST0";
    attribute REG_SIGNEDA_CE of dsp_0 : label is "CE0";
    attribute REG_SIGNEDA_CLK of dsp_0 : label is "NONE";
    attribute REG_OUTPUT_RST of dsp_0 : label is "RST0";
    attribute REG_OUTPUT_CE of dsp_0 : label is "CE0";
    attribute REG_OUTPUT_CLK of dsp_0 : label is "NONE";
    attribute REG_PIPELINE_RST of dsp_0 : label is "RST0";
    attribute REG_PIPELINE_CE of dsp_0 : label is "CE0";
    attribute REG_PIPELINE_CLK of dsp_0 : label is "NONE";
    attribute REG_INPUTB_RST of dsp_0 : label is "RST0";
    attribute REG_INPUTB_CE of dsp_0 : label is "CE0";
    attribute REG_INPUTB_CLK of dsp_0 : label is "NONE";
    attribute REG_INPUTA_RST of dsp_0 : label is "RST0";
    attribute REG_INPUTA_CE of dsp_0 : label is "CE0";
    attribute REG_INPUTA_CLK of dsp_0 : label is "NONE";
    attribute NGD_DRC_MASK : integer;
    attribute NGD_DRC_MASK of Structure : architecture is 1;

begin
    -- component instantiation statements
    scuba_vhi_inst: VHI
        port map (Z=>scuba_vhi);

    scuba_vlo_inst: VLO
        port map (Z=>scuba_vlo);

    dsp_0: MULT18X18B
        -- synopsys translate_off
        generic map (GSR=> "ENABLED", REG_SIGNEDB_RST=> "RST0", 
        REG_SIGNEDB_CE=> "CE0", REG_SIGNEDB_CLK=> "NONE", 
        REG_SIGNEDA_RST=> "RST0", REG_SIGNEDA_CE=> "CE0", 
        REG_SIGNEDA_CLK=> "NONE", REG_OUTPUT_RST=> "RST0", REG_OUTPUT_CE=> "CE0", 
        REG_OUTPUT_CLK=> "NONE", REG_PIPELINE_RST=> "RST0", 
        REG_PIPELINE_CE=> "CE0", REG_PIPELINE_CLK=> "NONE", 
        REG_INPUTB_RST=> "RST0", REG_INPUTB_CE=> "CE0", REG_INPUTB_CLK=> "NONE", 
        REG_INPUTA_RST=> "RST0", REG_INPUTA_CE=> "CE0", REG_INPUTA_CLK=> "NONE")
        -- synopsys translate_on
        port map (A17=>DataA(15), A16=>DataA(14), A15=>DataA(13), 
            A14=>DataA(12), A13=>DataA(11), A12=>DataA(10), 
            A11=>DataA(9), A10=>DataA(8), A9=>DataA(7), A8=>DataA(6), 
            A7=>DataA(5), A6=>DataA(4), A5=>DataA(3), A4=>DataA(2), 
            A3=>DataA(1), A2=>DataA(0), A1=>scuba_vlo, A0=>scuba_vlo, 
            B17=>DataB(15), B16=>DataB(14), B15=>DataB(13), 
            B14=>DataB(12), B13=>DataB(11), B12=>DataB(10), 
            B11=>DataB(9), B10=>DataB(8), B9=>DataB(7), B8=>DataB(6), 
            B7=>DataB(5), B6=>DataB(4), B5=>DataB(3), B4=>DataB(2), 
            B3=>DataB(1), B2=>DataB(0), B1=>scuba_vlo, B0=>scuba_vlo, 
            SIGNEDA=>scuba_vhi, SIGNEDB=>scuba_vhi, SOURCEA=>scuba_vlo, 
            SOURCEB=>scuba_vlo, CE0=>scuba_vhi, CE1=>scuba_vhi, 
            CE2=>scuba_vhi, CE3=>scuba_vhi, CLK0=>scuba_vlo, 
            CLK1=>scuba_vlo, CLK2=>scuba_vlo, CLK3=>scuba_vlo, 
            RST0=>scuba_vlo, RST1=>scuba_vlo, RST2=>scuba_vlo, 
            RST3=>scuba_vlo, SRIA17=>scuba_vlo, SRIA16=>scuba_vlo, 
            SRIA15=>scuba_vlo, SRIA14=>scuba_vlo, SRIA13=>scuba_vlo, 
            SRIA12=>scuba_vlo, SRIA11=>scuba_vlo, SRIA10=>scuba_vlo, 
            SRIA9=>scuba_vlo, SRIA8=>scuba_vlo, SRIA7=>scuba_vlo, 
            SRIA6=>scuba_vlo, SRIA5=>scuba_vlo, SRIA4=>scuba_vlo, 
            SRIA3=>scuba_vlo, SRIA2=>scuba_vlo, SRIA1=>scuba_vlo, 
            SRIA0=>scuba_vlo, SRIB17=>scuba_vlo, SRIB16=>scuba_vlo, 
            SRIB15=>scuba_vlo, SRIB14=>scuba_vlo, SRIB13=>scuba_vlo, 
            SRIB12=>scuba_vlo, SRIB11=>scuba_vlo, SRIB10=>scuba_vlo, 
            SRIB9=>scuba_vlo, SRIB8=>scuba_vlo, SRIB7=>scuba_vlo, 
            SRIB6=>scuba_vlo, SRIB5=>scuba_vlo, SRIB4=>scuba_vlo, 
            SRIB3=>scuba_vlo, SRIB2=>scuba_vlo, SRIB1=>scuba_vlo, 
            SRIB0=>scuba_vlo, SROA17=>open, SROA16=>open, SROA15=>open, 
            SROA14=>open, SROA13=>open, SROA12=>open, SROA11=>open, 
            SROA10=>open, SROA9=>open, SROA8=>open, SROA7=>open, 
            SROA6=>open, SROA5=>open, SROA4=>open, SROA3=>open, 
            SROA2=>open, SROA1=>open, SROA0=>open, SROB17=>open, 
            SROB16=>open, SROB15=>open, SROB14=>open, SROB13=>open, 
            SROB12=>open, SROB11=>open, SROB10=>open, SROB9=>open, 
            SROB8=>open, SROB7=>open, SROB6=>open, SROB5=>open, 
            SROB4=>open, SROB3=>open, SROB2=>open, SROB1=>open, 
            SROB0=>open, P35=>Result(31), P34=>Result(30), 
            P33=>Result(29), P32=>Result(28), P31=>Result(27), 
            P30=>Result(26), P29=>Result(25), P28=>Result(24), 
            P27=>Result(23), P26=>Result(22), P25=>Result(21), 
            P24=>Result(20), P23=>Result(19), P22=>Result(18), 
            P21=>Result(17), P20=>Result(16), P19=>Result(15), 
            P18=>Result(14), P17=>Result(13), P16=>Result(12), 
            P15=>Result(11), P14=>Result(10), P13=>Result(9), 
            P12=>Result(8), P11=>Result(7), P10=>Result(6), 
            P9=>Result(5), P8=>Result(4), P7=>Result(3), P6=>Result(2), 
            P5=>Result(1), P4=>Result(0), P3=>open, P2=>open, P1=>open, 
            P0=>open);

end Structure;

-- synopsys translate_off
library xp2;
configuration Structure_CON of MultiplierS16 is
    for Structure
        for all:VHI use entity xp2.VHI(V); end for;
        for all:VLO use entity xp2.VLO(V); end for;
        for all:MULT18X18B use entity xp2.MULT18X18B(V); end for;
    end for;
end Structure_CON;

-- synopsys translate_on
