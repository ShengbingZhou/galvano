-- VHDL netlist generated by SCUBA Diamond (64-bit) 3.7.0.96.1
-- Module  Version: 3.5
--C:\lscc\diamond\3.7_x64\ispfpga\bin\nt64\scuba.exe -w -n Subtractor -lang vhdl -synth lse -bus_exp 7 -bb -arch mg5a00 -type sub -width 16 -signed -pipeline 0 

-- Mon Jan 22 13:13:35 2018

library IEEE;
use IEEE.std_logic_1164.all;
-- synopsys translate_off
library xp2;
use xp2.components.all;
-- synopsys translate_on

entity Subtractor is
    port (
        DataA: in  std_logic_vector(15 downto 0); 
        DataB: in  std_logic_vector(15 downto 0); 
        Result: out  std_logic_vector(15 downto 0));
end Subtractor;

architecture Structure of Subtractor is

    -- internal signal declarations
    signal precin: std_logic;
    signal scuba_vhi: std_logic;
    signal co0: std_logic;
    signal co1: std_logic;
    signal co2: std_logic;
    signal co3: std_logic;
    signal co4: std_logic;
    signal co5: std_logic;
    signal co6: std_logic;
    signal co7: std_logic;
    signal scuba_vlo: std_logic;

    -- local component declarations
    component FADD2B
        port (A0: in  std_logic; A1: in  std_logic; B0: in  std_logic; 
            B1: in  std_logic; CI: in  std_logic; COUT: out  std_logic; 
            S0: out  std_logic; S1: out  std_logic);
    end component;
    component FSUB2B
        port (A0: in  std_logic; A1: in  std_logic; B0: in  std_logic; 
            B1: in  std_logic; BI: in  std_logic; BOUT: out  std_logic; 
            S0: out  std_logic; S1: out  std_logic);
    end component;
    component VHI
        port (Z: out  std_logic);
    end component;
    component VLO
        port (Z: out  std_logic);
    end component;
    attribute NGD_DRC_MASK : integer;
    attribute NGD_DRC_MASK of Structure : architecture is 1;

begin
    -- component instantiation statements
    precin_inst51: FADD2B
        port map (A0=>scuba_vlo, A1=>scuba_vlo, B0=>scuba_vlo, 
            B1=>scuba_vlo, CI=>scuba_vlo, COUT=>precin, S0=>open, 
            S1=>open);

    scuba_vhi_inst: VHI
        port map (Z=>scuba_vhi);

    addsub_0: FSUB2B
        port map (A0=>scuba_vhi, A1=>DataA(0), B0=>scuba_vlo, 
            B1=>DataB(0), BI=>precin, BOUT=>co0, S0=>open, S1=>Result(0));

    addsub_1: FSUB2B
        port map (A0=>DataA(1), A1=>DataA(2), B0=>DataB(1), B1=>DataB(2), 
            BI=>co0, BOUT=>co1, S0=>Result(1), S1=>Result(2));

    addsub_2: FSUB2B
        port map (A0=>DataA(3), A1=>DataA(4), B0=>DataB(3), B1=>DataB(4), 
            BI=>co1, BOUT=>co2, S0=>Result(3), S1=>Result(4));

    addsub_3: FSUB2B
        port map (A0=>DataA(5), A1=>DataA(6), B0=>DataB(5), B1=>DataB(6), 
            BI=>co2, BOUT=>co3, S0=>Result(5), S1=>Result(6));

    addsub_4: FSUB2B
        port map (A0=>DataA(7), A1=>DataA(8), B0=>DataB(7), B1=>DataB(8), 
            BI=>co3, BOUT=>co4, S0=>Result(7), S1=>Result(8));

    addsub_5: FSUB2B
        port map (A0=>DataA(9), A1=>DataA(10), B0=>DataB(9), 
            B1=>DataB(10), BI=>co4, BOUT=>co5, S0=>Result(9), 
            S1=>Result(10));

    addsub_6: FSUB2B
        port map (A0=>DataA(11), A1=>DataA(12), B0=>DataB(11), 
            B1=>DataB(12), BI=>co5, BOUT=>co6, S0=>Result(11), 
            S1=>Result(12));

    addsub_7: FSUB2B
        port map (A0=>DataA(13), A1=>DataA(14), B0=>DataB(13), 
            B1=>DataB(14), BI=>co6, BOUT=>co7, S0=>Result(13), 
            S1=>Result(14));

    scuba_vlo_inst: VLO
        port map (Z=>scuba_vlo);

    addsub_8: FSUB2B
        port map (A0=>DataA(15), A1=>scuba_vlo, B0=>DataB(15), 
            B1=>scuba_vlo, BI=>co7, BOUT=>open, S0=>Result(15), S1=>open);

end Structure;

-- synopsys translate_off
library xp2;
configuration Structure_CON of Subtractor is
    for Structure
        for all:FADD2B use entity xp2.FADD2B(V); end for;
        for all:FSUB2B use entity xp2.FSUB2B(V); end for;
        for all:VHI use entity xp2.VHI(V); end for;
        for all:VLO use entity xp2.VLO(V); end for;
    end for;
end Structure_CON;

-- synopsys translate_on
